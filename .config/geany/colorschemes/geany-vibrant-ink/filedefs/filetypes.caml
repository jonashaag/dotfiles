# For complete documentation of this file, please see Geany's main documentation
[styling]
# foreground;background;bold;italic
default=0xffffff;0x000000;false;false
comment=0x9933cc;0x000000;false;false
comment1=0x9933cc;0x000000;false;false
comment2=0x9933cc;0x000000;false;false
comment3=0x9933cc;0x000000;false;false
number=0xff8000;0x000000;false;false
keyword=0xff6600;0x000000;true;false
keyword2=0x66ff00;0x000000;true;false
string=0x66ff00;0x000000;false;false
char=0x66ff00;0x000000;false;false
operator=0xffcc00;0x000000;false;false
identifier=0xffffff;0x000000;false;false
tagname=0xffffff;0x000000;true;false
linenum=0xffffff;0x000000;false;false

[keywords]
# all items must be in one line
keywords=and as assert asr begin class constraint do done downto else end exception external false for fun function functor if in include inherit initializer land lazy let lor lsl lsr lxor match method mod module mutable new object of open or private rec sig struct then to true try type val virtual when while with
keywords_optional=option Some None ignore ref


[settings]
# default extension used when saving files
#extension=ml

# the following characters are these which a "word" can contains, see documentation
#wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# if only single comment char is supported like # in this file, leave comment_close blank
comment_open=(*
comment_close=*)

# set to false if a comment character/string should start at column 0 of a line, true uses any
# indentation of the line, e.g. setting to true causes the following on pressing CTRL+d
	#command_example();
# setting to false would generate this
#	command_example();
# This setting works only for single line comments
comment_use_indent=true

# context action command (please see Geany's main documentation for details)
context_action_cmd=

[build_settings]
# %f will be replaced by the complete filename
# %e will be replaced by the filename without extension
# (use only one of it at one time)
compiler=ocamlc -c "%f"
linker=ocamlc -o "%e" "%f"
run_cmd="./%e"
